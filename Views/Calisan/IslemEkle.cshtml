@model IEnumerable<IslemModel>

@{
    ViewData["Title"] = "İşlem Ekle";
}

<h2>@ViewData["Title"]</h2>

@if (TempData["Message"] != null)
{
    <div class="alert alert-info">
        @TempData["Message"]
    </div>
}

<form asp-action="IslemEkle" method="post" class="needs-validation">

    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <div class="form-group mb-3">
                <label class="form-label">İşlem</label>
                <select name="id" class="form-control" aria-label="İşlem Seçiniz">
                    <option value="">Lütfen İşlem Seçin</option>
                    @foreach (var islem in Model)
                    {
                        <option value="@islem.Id">@islem.Baslik</option>
                    }
                </select>
            </div>
            <div class="form-group mb-3">
                <label class="form-label">Yetkinlik</label>
                <select name="yetkinlik" class="form-control" aria-label="Yetkinlik Seçiniz">
                    <option value="">Lütfen Yetkinlik Seçin</option>
                    @for (int i = 1; i <= 10; i++)
                    {
                        <option value="@i">@i</option>
                    }
                </select>
            </div>
            <div class="form-group mb-3">
                <input class="form-text" type="text" name="not" value="" />
            </div>
            <button type="submit" class="btn btn-secondary mt-3">Kaydet</button>
        </div>
    </div>

</form>

<!-- Display Errors -->
<div asp-validation-summary="All" class="text-danger mt-3"></div>

<a asp-action="Index" class="btn btn-secondary mt-3">Geri Dön</a>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<!-- JavaScript: Bootstrap validation -->
<script>
    // Boş alan kontrolü
    (function () {
        'use strict'
        window.addEventListener('load', function () {
            var forms = document.getElementsByClassName('needs-validation');
            var validation = Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);
    })();
</script>

